{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport postData from '../fakeApiData';\nexport const initialState = {\n  status: null,\n  posts: []\n}; // A slice for recipes with our three reducers\n\nconst newPostsSlice = createSlice({\n  name: 'newPosts',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getNewPosts.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [getNewPosts.fulfilled]: (state, action) => {\n      state.status = 'success';\n      state.posts = action.payload;\n    },\n    [getNewPosts.rejected]: (state, actiom) => {\n      state.status = 'failed';\n    }\n  }\n});\nexport const getNewPosts = createAsyncThunk('posts/getPosts', async (dispatch, getState) => {\n  return await fetch('https://jsonplaceholder.typicode.com/users').then(res => res.json());\n});\nexport default newPostsSlice.reducer;","map":{"version":3,"sources":["/home/sdlive/React Apps/React-Tailwindcss/react-tailwindcss/src/slices/postNewSlice.js"],"names":["createSlice","createAsyncThunk","axios","postData","initialState","status","posts","newPostsSlice","name","reducers","extraReducers","getNewPosts","pending","state","action","fulfilled","payload","rejected","actiom","dispatch","getState","fetch","then","res","json","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,IADgB;AAExBC,EAAAA,KAAK,EAAE;AAFiB,CAArB,C,CAKL;;AACA,MAAMC,aAAa,GAAGP,WAAW,CAAC;AAChCQ,EAAAA,IAAI,EAAE,UAD0B;AAEhCJ,EAAAA,YAFgC;AAGhCK,EAAAA,QAAQ,EAAE,EAHsB;AAIhCC,EAAAA,aAAa,EAAE;AAChB,KAACC,WAAW,CAACC,OAAb,GAAuB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACR,MAAN,GAAe,SAAf;AACA,KAHe;AAIhB,KAACM,WAAW,CAACI,SAAb,GAAyB,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACR,MAAN,GAAe,SAAf;AACAQ,MAAAA,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACE,OAArB;AACA,KAPe;AAQhB,KAACL,WAAW,CAACM,QAAb,GAAwB,CAACJ,KAAD,EAAQK,MAAR,KAAmB;AAC1CL,MAAAA,KAAK,CAACR,MAAN,GAAe,QAAf;AACA;AAVe;AAJiB,CAAD,CAAjC;AAkBA,OAAO,MAAMM,WAAW,GAAGV,gBAAgB,CACzC,gBADyC,EAEzC,OAAOkB,QAAP,EAAiBC,QAAjB,KAA8B;AAC5B,SAAO,MAAMC,KAAK,CAAC,4CAAD,CAAL,CAAoDC,IAApD,CACVC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADE,CAAb;AAGD,CANwC,CAApC;AASR,eAAejB,aAAa,CAACkB,OAA7B","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios';\n\nimport postData from '../fakeApiData';\n\nexport const initialState = {\n    status: null,\n    posts: [],\n  }\n  \n  // A slice for recipes with our three reducers\n  const newPostsSlice = createSlice({\n    name: 'newPosts',\n    initialState,\n    reducers: {},\n    extraReducers: {\n\t\t\t[getNewPosts.pending]: (state, action) => {\n\t\t\t\tstate.status = 'loading';\n\t\t\t},\n\t\t\t[getNewPosts.fulfilled]: (state, action) => {\n\t\t\t\tstate.status = 'success';\n\t\t\t\tstate.posts = action.payload;\n\t\t\t},\n\t\t\t[getNewPosts.rejected]: (state, actiom) => {\n\t\t\t\tstate.status = 'failed';\n\t\t\t}\n    }\n  })\n\n  export const getNewPosts = createAsyncThunk(\n    'posts/getPosts',\n    async (dispatch, getState) => {\n      return await fetch('https://jsonplaceholder.typicode.com/users').then(\n        (res) => res.json()\n      );\n    }\n  );\n\n\texport default newPostsSlice.reducer;"]},"metadata":{},"sourceType":"module"}