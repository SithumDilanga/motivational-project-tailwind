{"ast":null,"code":"var _jsxFileName = \"/home/sdlive/React Apps/React-Tailwindcss/react-tailwindcss/src/user_profile/tab_components/tab_content/posts_content.js\",\n    _s = $RefreshSig$();\n\nimport Post from \"../../../home/posts/post\";\nimport img1 from '../../../assets/img1.jpg';\nimport { MdImage } from 'react-icons/md';\nimport axios from \"axios\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPosts, postsSelector } from '../../../slices/postsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostsContent() {\n  _s();\n\n  // to select input element image pick \n  const fileInput = useRef(null); // \n\n  const [isPostCompleted, setIsPostCompleted] = useState(false); // ---------- Auto resizing textarea(vanilla JS implementation) ----------\n\n  const txtArea = document.getElementsByTagName(\"textarea\");\n\n  for (let i = 0; i < txtArea.length; i++) {\n    txtArea[i].setAttribute(\"style\", \"height:\" + txtArea[i].scrollHeight + \"px;overflow-y:hidden; \");\n    txtArea[i].addEventListener(\"input\", OnInput, false);\n  }\n\n  function OnInput() {\n    this.style.height = \"auto\";\n    this.style.height = this.scrollHeight + \"px\";\n  }\n\n  const dispatch = useDispatch();\n  const {\n    posts,\n    loading,\n    hasErrors\n  } = useSelector(postsSelector); // ---------- End Auto resizing textarea(vanilla JS implementation) ----------\n  // ---------- image select and upload functions -----------\n\n  const [selectedImage, setSelectedImage] = useState(''); // to pick image\n\n  const [imgData, setImgData] = useState(null); // to preview image\n\n  const imageSelectHandler = event => {\n    setSelectedImage(event.target.files[0]);\n    console.log(event.target.files[0]);\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      setImgData(reader.result);\n    });\n    reader.readAsDataURL(event.target.files[0]);\n  };\n\n  const imageUploaderHandler = () => {\n    const fd = new FormData();\n    fd.append('image', selectedImage, selectedImage.name);\n    axios.post('https://myapi/photos', fd, {\n      onUploadProgress: ProgressEvent => {\n        console.log('Upload Progress : ' + Math.round(ProgressEvent.loaded / ProgressEvent.total * 100) + '%');\n      }\n    }).then(res => {\n      console.log(res);\n    });\n  }; // ---------- End image select and upload functions -----------\n  // ---------- description text select and upload functions -----------\n\n\n  const [descText, setDescText] = useState();\n  const [descTextId, setDescTextId] = useState();\n\n  const handleDescText = event => {\n    setDescText(event.target.value);\n    console.log(descText);\n  };\n\n  const descTextUploadHandler = () => {\n    const desc = {\n      desc: {\n        descText\n      }\n    };\n    axios.post('https://reqres.in/api/articles', desc).then(response => {\n      if (response.status === 201) {\n        setIsPostCompleted(true);\n        console.log(response.status);\n      } // console.log(response.status);\n\n    }); // setDescTextId(response.status)\n    // console.log(descTextId);\n  }; // ---------- description text select and upload functions -----------\n\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]); // error handling & map successful query data \n\n  const renderPosts = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading recipes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }, this);\n    if (hasErrors) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cannot display recipes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 27\n    }, this);\n    return posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      postData: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-auto pt-3 sm:w-4/5 \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" bg-white mx-2 my-2 p-2 pt-1 shadow-md rounded-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sm:flex sm:items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline-flex items-center ml-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: img1,\n              className: \"h-12 w-12 mr-3 rounded-full object-cover     object-center\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"text-lg mt-7 focus:outline-none resize-none\",\n              placeholder: \"What motivates you?\",\n              value: isPostCompleted ? '' : descText,\n              onChange: handleDescText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: imageSelectHandler,\n            className: \"hidden\",\n            ref: fileInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-yellow-100 w-20 flex items-center mr-1 ml-1 px-2 py-1 my-2   rounded-md hover:shadow cursor-pointer sm:hover:shadow-none sm:ml-auto  sm:hover:bg-yellow-100 sm:bg-transparent\",\n            onClick: () => {\n              var _fileInput$current;\n\n              return (_fileInput$current = fileInput.current) === null || _fileInput$current === void 0 ? void 0 : _fileInput$current.click();\n            },\n            children: [/*#__PURE__*/_jsxDEV(MdImage, {\n              size: \"24\",\n              color: \"#FFA500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-500 font-medium ml-0.5\",\n              children: \"Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgData,\n            className: `w-full ${isPostCompleted ? \"hidden\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end w-full pr-2 pt-1\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-brand-primary text-white text-lg font-semibold px-12 py-2 rounded-full hover:bg-brand-secondary outline-none\",\n          onClick: () => {\n            descTextUploadHandler();\n            imageUploaderHandler();\n          },\n          children: \"Grit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), renderPosts()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostsContent, \"471I5dfunDWBe1cZHbCBseA4cwo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostsContent;\nexport default PostsContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsContent\");","map":{"version":3,"sources":["/home/sdlive/React Apps/React-Tailwindcss/react-tailwindcss/src/user_profile/tab_components/tab_content/posts_content.js"],"names":["Post","img1","MdImage","axios","React","useEffect","useRef","useState","useDispatch","useSelector","fetchPosts","postsSelector","PostsContent","fileInput","isPostCompleted","setIsPostCompleted","txtArea","document","getElementsByTagName","i","length","setAttribute","scrollHeight","addEventListener","OnInput","style","height","dispatch","posts","loading","hasErrors","selectedImage","setSelectedImage","imgData","setImgData","imageSelectHandler","event","target","files","console","log","reader","FileReader","result","readAsDataURL","imageUploaderHandler","fd","FormData","append","name","post","onUploadProgress","ProgressEvent","Math","round","loaded","total","then","res","descText","setDescText","descTextId","setDescTextId","handleDescText","value","descTextUploadHandler","desc","response","status","renderPosts","map","current","click"],"mappings":"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","sourcesContent":["import Post from \"../../../home/posts/post\"\nimport img1 from '../../../assets/img1.jpg';\nimport { MdImage } from 'react-icons/md';\nimport axios from \"axios\";\n\nimport React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { fetchPosts, postsSelector } from '../../../slices/postsSlice'\n\n\nfunction PostsContent() {\n\n  // to select input element image pick \n  const fileInput = useRef(null)\n\n  // \n  const [isPostCompleted, setIsPostCompleted] = useState(false);\n\n  // ---------- Auto resizing textarea(vanilla JS implementation) ----------\n\n  const txtArea = document.getElementsByTagName(\"textarea\");\n\n  for (let i = 0; i < txtArea.length; i++) {\n    txtArea[i].setAttribute(\"style\", \"height:\" + (txtArea[i].scrollHeight) + \"px;overflow-y:hidden; \");\n    txtArea[i].addEventListener(\"input\", OnInput, false);\n  }\n\n  function OnInput() {\n    this.style.height = \"auto\";\n    this.style.height = (this.scrollHeight) + \"px\";\n  }\n\n\tconst dispatch = useDispatch()\n  const { posts, loading, hasErrors } = useSelector(postsSelector)\n\n  // ---------- End Auto resizing textarea(vanilla JS implementation) ----------\n\n  // ---------- image select and upload functions -----------\n\n  const [selectedImage, setSelectedImage] = useState(''); // to pick image\n  const [imgData, setImgData] = useState(null); // to preview image\n\n  const imageSelectHandler = event => {\n    setSelectedImage(event.target.files[0]);\n    console.log(event.target.files[0]);\n\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      setImgData(reader.result);\n    });\n    reader.readAsDataURL(event.target.files[0]);\n  }\n\n  const imageUploaderHandler = () => {\n    const fd = new FormData();\n    fd.append('image', selectedImage, selectedImage.name);\n    axios.post('https://myapi/photos', fd, {\n      onUploadProgress: ProgressEvent => {\n        console.log('Upload Progress : ' + Math.round(ProgressEvent.loaded / ProgressEvent.total * 100) + '%');\n      }\n    }).then(res => {\n      console.log(res);\n    });\n  }\n\n  // ---------- End image select and upload functions -----------\n\n  // ---------- description text select and upload functions -----------\n\n  const [descText, setDescText] = useState();\n  const [descTextId, setDescTextId] = useState();\n\n  const handleDescText = (event) => {\n    setDescText(event.target.value);\n    console.log(descText);\n  }\n\n  const descTextUploadHandler =() => {\n    const desc = {\n      desc: {descText}\n    }\n\n    axios.post('https://reqres.in/api/articles', desc)\n          .then(response => {\n            if(response.status === 201) {\n              setIsPostCompleted(true);\n              console.log(response.status);\n            }\n            // console.log(response.status);\n          });\n    // setDescTextId(response.status)\n    // console.log(descTextId);\n  }\n\n  // ---------- description text select and upload functions -----------\n\n  useEffect(() => {\n    dispatch(fetchPosts())\n  }, [dispatch])\n\n\t// error handling & map successful query data \n  const renderPosts = () => {\n    if (loading) return <p>Loading recipes...</p>\n    if (hasErrors) return <p>Cannot display recipes...</p>\n\n    return posts.map(post => \n      <Post postData={post} />  \n    )\n  }\n\n\treturn (\n    <div className=\"bg-gray-50\">\n\t\t  <div className=\"m-auto pt-3 sm:w-4/5 \">\n        <div className=\" bg-white mx-2 my-2 p-2 pt-1 shadow-md rounded-md\">\n          <div className=\"sm:flex sm:items-center\">\n            <div className=\"inline-flex items-center ml-1\">\n              <img src={img1} className=\"h-12 w-12 mr-3 rounded-full object-cover     object-center\" />\n              {/* <input type=\"text\" placeholder=\"What motivates you ?\"   className=\"text-lg  focus:outline-none\" /> */}\n              <textarea className=\"text-lg mt-7 focus:outline-none resize-none\"     placeholder=\"What motivates you?\" value={isPostCompleted ? '' : descText} onChange={handleDescText} >\n              </textarea>\n            </div>\n\n            {/* image picker */}\n            <input type=\"file\" onChange={imageSelectHandler} className=\"hidden\" ref=  {fileInput} />\n            <div className=\"bg-yellow-100 w-20 flex items-center mr-1 ml-1 px-2 py-1 my-2   rounded-md hover:shadow cursor-pointer sm:hover:shadow-none sm:ml-auto  sm:hover:bg-yellow-100 sm:bg-transparent\" onClick={() => fileInput.current?. click()}>\n              <MdImage size=\"24\" color=\"#FFA500\" />\n              <div className=\"text-gray-500 font-medium ml-0.5\">Photo</div>\n            </div>\n          </div>\n\n          <div className=\"\">\n            <img src={imgData} className={`w-full ${isPostCompleted ? \"hidden\" : \"\"}`} />\n          </div>\n\n        </div>\n        <div className=\"flex justify-end w-full pr-2 pt-1\">\n          <button className=\"bg-brand-primary text-white text-lg font-semibold px-12 py-2 rounded-full hover:bg-brand-secondary outline-none\" onClick={() => {\n            descTextUploadHandler();\n            imageUploaderHandler();\n          }} > \n          {/* imageUploaderHandler TODO:find a way to trigger both image and desc upload functions */}\n          Grit\n          </button>\n          \n          {/* <button onClick={() => fileInput.current?.click()} >Pick File</button> */}\n          {/* <button onClick={imageUploaderHandler}>Upload</button> */}\n        </div>\n\t\t  \t{renderPosts()}\n\t\t  </div>\n    </div>\n\t);\n}\n\nexport default PostsContent;"]},"metadata":{},"sourceType":"module"}