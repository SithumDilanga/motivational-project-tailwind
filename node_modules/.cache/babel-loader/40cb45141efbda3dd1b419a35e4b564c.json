{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport postData from '../fakeApiData'; // export const getPosts = createAsyncThunk(\n//   \"posts/getPosts\",\n//   async (dispatch, getState) => {\n// \t\tconst postsData = postData;\n//     return await fetch(\"https://jsonplaceholder.typicode.com/users\").then(\n//       (res) => res.json()\n//     );\n//   }\n// );\n\nexport const getPosts = createAsyncThunk(\"posts/getPosts\", async (dispatch, getState) => {\n  const postsData = postData;\n  return await fetch(\"https://jsonplaceholder.typicode.com/users\").then(res => res.json());\n});\nconst postsSlice = createSlice({\n  name: \"post\",\n  initialState: {\n    posts: [],\n    status: null\n  },\n  extraReducers: {\n    [getPosts.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getPosts.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.posts = action.payload;\n    },\n    [getPosts.rejected]: (state, action) => {\n      state.status = \"failed\";\n    }\n  }\n});\nexport default postsSlice.reducer;","map":{"version":3,"sources":["/home/sdlive/React Apps/React-Tailwindcss/react-tailwindcss/src/slices/postNewSlice.js"],"names":["createSlice","createAsyncThunk","postData","getPosts","dispatch","getState","postsData","fetch","then","res","json","postsSlice","name","initialState","posts","status","extraReducers","pending","state","action","fulfilled","payload","rejected","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAGF,gBAAgB,CACtC,gBADsC,EAEtC,OAAOG,QAAP,EAAiBC,QAAjB,KAA8B;AAE9B,QAAMC,SAAS,GAAGJ,QAAlB;AAEE,SAAO,MAAMK,KAAK,CAAC,4CAAD,CAAL,CAAoDC,IAApD,CACVC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADE,CAAb;AAGD,CATqC,CAAjC;AAYP,MAAMC,UAAU,GAAGX,WAAW,CAAC;AAC7BY,EAAAA,IAAI,EAAE,MADuB;AAE7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,MAAM,EAAE;AAFI,GAFe;AAM7BC,EAAAA,aAAa,EAAE;AACb,KAACb,QAAQ,CAACc,OAAV,GAAoB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACH,MAAN,GAAe,SAAf;AACD,KAHY;AAIb,KAACZ,QAAQ,CAACiB,SAAV,GAAsB,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACH,MAAN,GAAe,SAAf;AACAG,MAAAA,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACE,OAArB;AACD,KAPY;AAQb,KAAClB,QAAQ,CAACmB,QAAV,GAAqB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACH,MAAN,GAAe,QAAf;AACD;AAVY;AANc,CAAD,CAA9B;AAoBA,eAAeJ,UAAU,CAACY,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport postData from '../fakeApiData';\n\n// export const getPosts = createAsyncThunk(\n//   \"posts/getPosts\",\n//   async (dispatch, getState) => {\n\n// \t\tconst postsData = postData;\n\n//     return await fetch(\"https://jsonplaceholder.typicode.com/users\").then(\n//       (res) => res.json()\n//     );\n//   }\n// );\n\nexport const getPosts = createAsyncThunk(\n  \"posts/getPosts\",\n  async (dispatch, getState) => {\n\n\t\tconst postsData = postData;\n\n    return await fetch(\"https://jsonplaceholder.typicode.com/users\").then(\n      (res) => res.json()\n    );\n  }\n);\n\nconst postsSlice = createSlice({\n  name: \"post\",\n  initialState: {\n    posts: [],\n    status: null,\n  },\n  extraReducers: {\n    [getPosts.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [getPosts.fulfilled]: (state, action) => {\n      state.status = \"success\";\n      state.posts = action.payload;\n    },\n    [getPosts.rejected]: (state, action) => {\n      state.status = \"failed\";\n    },\n  },\n});\n\nexport default postsSlice.reducer;"]},"metadata":{},"sourceType":"module"}