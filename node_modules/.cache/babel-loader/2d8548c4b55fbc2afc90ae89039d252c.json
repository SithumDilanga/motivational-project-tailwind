{"ast":null,"code":"/*import { createSlice } from '@reduxjs/toolkit';\nimport { stat } from 'fs-extra';\n// import postData from './fakeApiData';\nimport img1 from '../assets/img1.jpg';\nimport img2 from '../assets/img2.png';\n\nconst postData = [\n    {\n      username: 'Steve Hawl',\n      date: '28 jun 2020',\n      userProfilePic: {img1},\n      postDesc: 'This is post description',\n      postImages: [\n        'https://live.staticflickr.com/65535/51289414298_52b007f540_h.jpg', \n        'https://live.staticflickr.com/65535/51294202574_2bfe8c0cdb_h.jpg'\n      ],\n      postReactions: {\n          good: '15',\n          awesome: '7',\n          excellent: '5',\n          bad: '1'\n        }\n      ,\n    },\n    {\n      username: 'Jack Mori',\n      date: '25 jun 2020',\n      userProfilePic: {img2},\n      postDesc: 'This is post description of Jack',\n      postImages: [\n        'https://live.staticflickr.com/65535/51294202574_2bfe8c0cdb_h.jpg', \n      ],\n      postReactions: {\n          good: '15',\n          awesome: '7',\n          excellent: '5',\n          bad: '1'\n        }\n      ,\n    },\n    {\n      username: 'Jane Oni',\n      date: '24 jun 2020',\n      userProfilePic: {img2},\n      postDesc: 'This is post description of Jane',\n      postImages: [\n        \"https://live.staticflickr.com/65535/51304260849_d30f211689_h.jpg\",\n        \"https://live.staticflickr.com/65535/51295760866_c10e777459_h.jpg\", \n      ],\n      postReactions: {\n          good: '25',\n          awesome: '15',\n          excellent: '9',\n          bad: '5'\n        }\n      ,\n    },\n    {\n      username: 'Niko Belic',\n      date: '20 jun 2020',\n      userProfilePic: {img2},\n      postDesc: 'This is post description of Niko Belic',\n      postImages: [\n        \"https://live.staticflickr.com/65535/51300730820_9c3eb95cac_k.jpg\", \n      ],\n      postReactions: {\n          good: '35',\n          awesome: '15',\n          excellent: '14',\n          bad: '1'\n        },\n    },\n  ];\n\n\nexport const initialState = {\n\tloading: false,\n\thasErrors: false,\n\tposts: [],\n}\n\nconst postsSlice = createSlice({\n\tname: 'posts',\n\tinitialState,\n\treducers: {\n\t\tgetPosts: state => {\n\t\t\tstate.loading = true;\n\t\t},\n\t\tgetPostsSuccess: (state, {payload}) => {\n\t\t\tstate.posts = payload\n\t\t\tstate.loading = false\n\t\t\tstate.hasErrors = false\n\t\t},\n\t\tgetPostsFailure: state => {\n\t\t\tstate.loading = false\n\t\t\tstate.hasErrors = true\n\t\t}\n\t}\n});\n\n// Asynchronous thunk function\nexport function fetchPosts() {\n\treturn async dispatch => {\n\t\tdispatch(getPosts());\n\n\t\ttry {\n\t\t\tconst response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\n\t\t\tconst data = await response.json()\n\t  \n\t\t\tdispatch(getPostsSuccess(data.meals))\n\t\t  } catch (error) {\n\t\t\tdispatch(getPostsFailure())\n\t\t  }\n\n\t\t// try {\n\n\t\t// \tconst postsData = postData;\n\t\t// \tdispatch(getPostsSuccess(postsData));\n\n\t\t// } catch(error) {\n\t\t// \tdispatch(getPostsFailure());\n\t\t// }\n\t}\n}\n\n// three action generated from this slice\nexport const { getPosts, getPostsSuccess, getPostsFailure } = postsSlice.actions;\n\n// a selector\nexport const postsSelector = state => state.posts;\n\n// the reducer\nexport default postsSlice.reducer; */\nimport { createSlice } from '@reduxjs/toolkit';\nexport const initialState = {\n  loading: false,\n  hasErrors: false,\n  recipes: []\n}; // A slice for recipes with our three reducers\n\nconst recipesSlice = createSlice({\n  name: 'recipes',\n  initialState,\n  reducers: {\n    getRecipes: state => {\n      state.loading = true;\n    },\n    getRecipesSuccess: (state, {\n      payload\n    }) => {\n      state.recipes = payload;\n      state.loading = false;\n      state.hasErrors = false;\n    },\n    getRecipesFailure: state => {\n      state.loading = false;\n      state.hasErrors = true;\n    }\n  }\n}); // Asynchronous thunk action\n\nexport function fetchRecipes() {\n  return async dispatch => {\n    dispatch(getRecipes()); //   try {\n    //     const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\n    //     const data = await response.json()\n    //     dispatch(getRecipesSuccess(data.meals))\n    //   } catch (error) {\n    //     dispatch(getRecipesFailure())\n    //   }\n\n    try {\n      const postsData = postData;\n      dispatch(getPostsSuccess(postsData));\n    } catch (error) {\n      dispatch(getPostsFailure());\n    }\n  };\n} // Three actions generated from the slice\n\nexport const {\n  getRecipes,\n  getRecipesSuccess,\n  getRecipesFailure\n} = recipesSlice.actions; // A selector\n\nexport const recipesSelector = state => state.recipes; // The reducer\n\nexport default recipesSlice.reducer;","map":{"version":3,"sources":["/home/sdlive/React Apps/React-Tailwindcss/react-tailwindcss/src/slices/postsSlice.js"],"names":["createSlice","initialState","loading","hasErrors","recipes","recipesSlice","name","reducers","getRecipes","state","getRecipesSuccess","payload","getRecipesFailure","fetchRecipes","dispatch","postsData","postData","getPostsSuccess","error","getPostsFailure","actions","recipesSelector","reducer"],"mappingskBAA5B;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,KADiB;AAE1BC,EAAAA,SAAS,EAAE,KAFe;AAG1BC,EAAAA,OAAO,EAAE;AAHiB,CAArB,C,CAMP;;AACA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BL,EAAAA,YAF+B;AAG/BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAEC,KAAK,IAAI;AACnBA,MAAAA,KAAK,CAACP,OAAN,GAAgB,IAAhB;AACD,KAHO;AAIRQ,IAAAA,iBAAiB,EAAE,CAACD,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACzCF,MAAAA,KAAK,CAACL,OAAN,GAAgBO,OAAhB;AACAF,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACD,KARO;AASRS,IAAAA,iBAAiB,EAAEH,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACN,SAAN,GAAkB,IAAlB;AACD;AAZO;AAHqB,CAAD,CAAhC,C,CAmBA;;AACA,OAAO,SAASU,YAAT,GAAwB;AAC3B,SAAO,MAAMC,QAAN,IAAkB;AACvBA,IAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR,CADuB,CAGzB;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEH,QAAI;AAEH,YAAMO,SAAS,GAAGC,QAAlB;AACAF,MAAAA,QAAQ,CAACG,eAAe,CAACF,SAAD,CAAhB,CAAR;AAEC,KALF,CAKG,OAAMG,KAAN,EAAa;AACdJ,MAAAA,QAAQ,CAACK,eAAe,EAAhB,CAAR;AACA;AACE,GApBD;AAqBD,C,CAEH;;AACA,OAAO,MAAM;AAAEX,EAAAA,UAAF;AAAcE,EAAAA,iBAAd;AAAiCE,EAAAA;AAAjC,IAAuDP,YAAY,CAACe,OAA1E,C,CAEP;;AACA,OAAO,MAAMC,eAAe,GAAGZ,KAAK,IAAIA,KAAK,CAACL,OAAvC,C,CAEP;;AACA,eAAeC,YAAY,CAACiB,OAA5B","sourcesContent":["/*import { createSlice } from '@reduxjs/toolkit';\nimport { stat } from 'fs-extra';\n// import postData from './fakeApiData';\nimport img1 from '../assets/img1.jpg';\nimport img2 from '../assets/img2.png';\n\nconst postData = [\n    {\n      username: 'Steve Hawl',\n      date: '28 jun 2020',\n      userProfilePic: {img1},\n      postDesc: 'This is post description',\n      postImages: [\n        'https://live.staticflickr.com/65535/51289414298_52b007f540_h.jpg', \n        'https://live.staticflickr.com/65535/51294202574_2bfe8c0cdb_h.jpg'\n      ],\n      postReactions: {\n          good: '15',\n          awesome: '7',\n          excellent: '5',\n          bad: '1'\n        }\n      ,\n    },\n    {\n      username: 'Jack Mori',\n      date: '25 jun 2020',\n      userProfilePic: {img2},\n      postDesc: 'This is post description of Jack',\n      postImages: [\n        'https://live.staticflickr.com/65535/51294202574_2bfe8c0cdb_h.jpg', \n      ],\n      postReactions: {\n          good: '15',\n          awesome: '7',\n          excellent: '5',\n          bad: '1'\n        }\n      ,\n    },\n    {\n      username: 'Jane Oni',\n      date: '24 jun 2020',\n      userProfilePic: {img2},\n      postDesc: 'This is post description of Jane',\n      postImages: [\n        \"https://live.staticflickr.com/65535/51304260849_d30f211689_h.jpg\",\n        \"https://live.staticflickr.com/65535/51295760866_c10e777459_h.jpg\", \n      ],\n      postReactions: {\n          good: '25',\n          awesome: '15',\n          excellent: '9',\n          bad: '5'\n        }\n      ,\n    },\n    {\n      username: 'Niko Belic',\n      date: '20 jun 2020',\n      userProfilePic: {img2},\n      postDesc: 'This is post description of Niko Belic',\n      postImages: [\n        \"https://live.staticflickr.com/65535/51300730820_9c3eb95cac_k.jpg\", \n      ],\n      postReactions: {\n          good: '35',\n          awesome: '15',\n          excellent: '14',\n          bad: '1'\n        },\n    },\n  ];\n\n\nexport const initialState = {\n\tloading: false,\n\thasErrors: false,\n\tposts: [],\n}\n\nconst postsSlice = createSlice({\n\tname: 'posts',\n\tinitialState,\n\treducers: {\n\t\tgetPosts: state => {\n\t\t\tstate.loading = true;\n\t\t},\n\t\tgetPostsSuccess: (state, {payload}) => {\n\t\t\tstate.posts = payload\n\t\t\tstate.loading = false\n\t\t\tstate.hasErrors = false\n\t\t},\n\t\tgetPostsFailure: state => {\n\t\t\tstate.loading = false\n\t\t\tstate.hasErrors = true\n\t\t}\n\t}\n});\n\n// Asynchronous thunk function\nexport function fetchPosts() {\n\treturn async dispatch => {\n\t\tdispatch(getPosts());\n\n\t\ttry {\n\t\t\tconst response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\n\t\t\tconst data = await response.json()\n\t  \n\t\t\tdispatch(getPostsSuccess(data.meals))\n\t\t  } catch (error) {\n\t\t\tdispatch(getPostsFailure())\n\t\t  }\n\n\t\t// try {\n\n\t\t// \tconst postsData = postData;\n\t\t// \tdispatch(getPostsSuccess(postsData));\n\n\t\t// } catch(error) {\n\t\t// \tdispatch(getPostsFailure());\n\t\t// }\n\t}\n}\n\n// three action generated from this slice\nexport const { getPosts, getPostsSuccess, getPostsFailure } = postsSlice.actions;\n\n// a selector\nexport const postsSelector = state => state.posts;\n\n// the reducer\nexport default postsSlice.reducer; */\n\nimport { createSlice } from '@reduxjs/toolkit'\n\nexport const initialState = {\n  loading: false,\n  hasErrors: false,\n  recipes: [],\n}\n\n// A slice for recipes with our three reducers\nconst recipesSlice = createSlice({\n  name: 'recipes',\n  initialState,\n  reducers: {\n    getRecipes: state => {\n      state.loading = true\n    },\n    getRecipesSuccess: (state, { payload }) => {\n      state.recipes = payload\n      state.loading = false\n      state.hasErrors = false\n    },\n    getRecipesFailure: state => {\n      state.loading = false\n      state.hasErrors = true\n    },\n  },\n})\n\n// Asynchronous thunk action\nexport function fetchRecipes() {\n    return async dispatch => {\n      dispatch(getRecipes())\n  \n    //   try {\n    //     const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\n    //     const data = await response.json()\n  \n    //     dispatch(getRecipesSuccess(data.meals))\n    //   } catch (error) {\n    //     dispatch(getRecipesFailure())\n    //   }\n\n\ttry {\n\n\t\tconst postsData = postData;\n\t\tdispatch(getPostsSuccess(postsData));\n\n\t\t} catch(error) {\n\t\t\tdispatch(getPostsFailure());\n\t\t}\n    }\n  }\n\n// Three actions generated from the slice\nexport const { getRecipes, getRecipesSuccess, getRecipesFailure } = recipesSlice.actions\n\n// A selector\nexport const recipesSelector = state => state.recipes\n\n// The reducer\nexport default recipesSlice.reducer"]},"metadata":{},"sourceType":"module"}