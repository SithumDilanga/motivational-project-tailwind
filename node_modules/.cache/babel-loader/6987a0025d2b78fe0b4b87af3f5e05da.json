{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport postData from '../fakeApiData';\nexport const getNewPosts = createAsyncThunk('posts/getNewPosts', async (dispatch, getState) => {\n  return await fetch('https://jsonplaceholder.typicode.com/users').then(res => {\n    res.json();\n    console.log(res.body);\n  });\n});\nconst initialState = {\n  status: null,\n  posts: []\n}; // A slice for recipes with our three reducers\n\nconst newPostsSlice = createSlice({\n  name: 'newPosts',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getNewPosts.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [getNewPosts.fulfilled]: (state, action) => {\n      state.status = 'success';\n      state.posts = action.payload;\n    },\n    [getNewPosts.rejected]: (state, actiom) => {\n      state.status = 'failed';\n    }\n  }\n});\nexport default newPostsSlice.reducer;","map":{"version":3,"sources":["/home/sdlive/React Apps/React-Tailwindcss/react-tailwindcss/src/slices/postNewSlice.js"],"names":["createSlice","createAsyncThunk","axios","postData","getNewPosts","dispatch","getState","fetch","then","res","json","console","log","body","initialState","status","posts","newPostsSlice","name","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","actiom","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CAC1C,mBAD0C,EAE1C,OAAOI,QAAP,EAAiBC,QAAjB,KAA8B;AAC7B,SAAO,MAAMC,KAAK,CAAC,4CAAD,CAAL,CAAoDC,IAApD,CACXC,GAAD,IAAS;AACRA,IAAAA,GAAG,CAACC,IAAJ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACA,GAJW,CAAb;AAMA,CATyC,CAApC;AAYL,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB,C,CAKA;;AACA,MAAMC,aAAa,GAAGjB,WAAW,CAAC;AAChCkB,EAAAA,IAAI,EAAE,UAD0B;AAEhCJ,EAAAA,YAFgC;AAGhCK,EAAAA,QAAQ,EAAE,EAHsB;AAIhCC,EAAAA,aAAa,EAAE;AAChB,KAAChB,WAAW,CAACiB,OAAb,GAAuB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACP,MAAN,GAAe,SAAf;AACA,KAHe;AAIhB,KAACX,WAAW,CAACoB,SAAb,GAAyB,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACP,MAAN,GAAe,SAAf;AACAO,MAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACE,OAArB;AACA,KAPe;AAQhB,KAACrB,WAAW,CAACsB,QAAb,GAAwB,CAACJ,KAAD,EAAQK,MAAR,KAAmB;AAC1CL,MAAAA,KAAK,CAACP,MAAN,GAAe,QAAf;AACA;AAVe;AAJiB,CAAD,CAAjC;AAkBD,eAAeE,aAAa,CAACW,OAA7B","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios';\n\nimport postData from '../fakeApiData';\n\nexport const getNewPosts = createAsyncThunk(\n\t'posts/getNewPosts',\n\tasync (dispatch, getState) => {\n\t\treturn await fetch('https://jsonplaceholder.typicode.com/users').then(\n\t\t\t(res) => {\n\t\t\t\tres.json()\n\t\t\t\tconsole.log(res.body)\n\t\t\t}\n\t\t);\n\t}\n);\n\n \tconst initialState = {\n    status: null,\n    posts: [],\n  }\n  \n  // A slice for recipes with our three reducers\n  const newPostsSlice = createSlice({\n    name: 'newPosts',\n    initialState,\n    reducers: {},\n    extraReducers: {\n\t\t\t[getNewPosts.pending]: (state, action) => {\n\t\t\t\tstate.status = 'loading';\n\t\t\t},\n\t\t\t[getNewPosts.fulfilled]: (state, action) => {\n\t\t\t\tstate.status = 'success';\n\t\t\t\tstate.posts = action.payload;\n\t\t\t},\n\t\t\t[getNewPosts.rejected]: (state, actiom) => {\n\t\t\t\tstate.status = 'failed';\n\t\t\t}\n    }\n  })\n\n\texport default newPostsSlice.reducer;"]},"metadata":{},"sourceType":"module"}