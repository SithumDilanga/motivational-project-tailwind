{"ast":null,"code":"// import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n// import axios from 'axios';\n// import postData from '../fakeApiData';\n// export const initialState = {\n//   loading: false,\n//   hasErrors: false,\n//   posts: [],\n// }\n// // A slice for recipes with our three reducers\n// const postsSlice = createSlice({\n//   name: 'posts',\n//   initialState,\n//   reducers: {\n//     getPosts: state => {\n//       state.loading = true\n//     },\n//     getPostsSuccess: (state, { payload }) => {\n//       state.posts = payload\n//       state.loading = false\n//       state.hasErrors = false\n//     },\n//     getPostsFailure: state => {\n//       state.loading = false\n//       state.hasErrors = true\n//     },\n//   },\n// })\n// // Asynchronous thunk action\n// export function fetchPosts() {\n//     return async dispatch => {\n//       dispatch(getPosts())\n//     //   try {\n//     //     const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\n//     //     const data = await response.json()\n//     //     dispatch(getRecipesSuccess(data.meals))\n//     //   } catch (error) {\n//     //     dispatch(getRecipesFailure())\n//     //   }\n// \t\ttry {\n// \t\t\tconst postsData = postData;\n// \t\t\tdispatch(getPostsSuccess(postsData));\n// \t\t\tconsole.log(postData);\n// \t\t} catch(error) {\n// \t\t\tdispatch(getPostsFailure());\n// \t\t}\n//     }\n//   }\n// // Three actions generated from the slice\n// export const { getPosts, getPostsSuccess, getPostsFailure } = postsSlice.actions\n// // A selector\n// export const postsSelector = state => state.posts\n// // The reducer\n// export default postsSlice.reducer","map":{"version":3,"sources":["/home/sdlive/React Apps/React-Tailwindcss/react-tailwindcss/src/slices/postsSlice.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA","sourcesContent":["// import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n// import axios from 'axios';\n\n// import postData from '../fakeApiData';\n\n// export const initialState = {\n//   loading: false,\n//   hasErrors: false,\n//   posts: [],\n// }\n\n// // A slice for recipes with our three reducers\n// const postsSlice = createSlice({\n//   name: 'posts',\n//   initialState,\n//   reducers: {\n//     getPosts: state => {\n//       state.loading = true\n//     },\n//     getPostsSuccess: (state, { payload }) => {\n//       state.posts = payload\n//       state.loading = false\n//       state.hasErrors = false\n//     },\n//     getPostsFailure: state => {\n//       state.loading = false\n//       state.hasErrors = true\n//     },\n//   },\n// })\n\n// // Asynchronous thunk action\n// export function fetchPosts() {\n//     return async dispatch => {\n//       dispatch(getPosts())\n  \n//     //   try {\n//     //     const response = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\n//     //     const data = await response.json()\n  \n//     //     dispatch(getRecipesSuccess(data.meals))\n//     //   } catch (error) {\n//     //     dispatch(getRecipesFailure())\n//     //   }\n\n// \t\ttry {\n\n// \t\t\tconst postsData = postData;\n// \t\t\tdispatch(getPostsSuccess(postsData));\n// \t\t\tconsole.log(postData);\n\n// \t\t} catch(error) {\n// \t\t\tdispatch(getPostsFailure());\n// \t\t}\n//     }\n//   }\n\n// // Three actions generated from the slice\n// export const { getPosts, getPostsSuccess, getPostsFailure } = postsSlice.actions\n\n// // A selector\n// export const postsSelector = state => state.posts\n\n// // The reducer\n// export default postsSlice.reducer"]},"metadata":{},"sourceType":"module"}